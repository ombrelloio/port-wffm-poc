@using Sitecore.Forms.Mvc.Html
@using Sitecore.Forms.Mvc.Interfaces
@using Sitecore.WFFM.Abstractions.Data.Enums
@model Sitecore.Forms.Mvc.ViewModels.Fields.PasswordConfirmationField

@using (Html.BeginField(false))
{
    if (Model.FormType != FormType.Horizontal)
    {
        @Html.BootstrapLabelFor(x => Model.Value, Model.PasswordTitle)

        @Html.BootstrapEditor("Value", Model.PasswordTitle)

        if (Model.ShowInformation)
        {
            @Html.HelpBlock(Model.PasswordHelp)
        }

        @Html.BootstrapValidationMessageFor(x => Model.Value)

        @Html.BootstrapLabelFor(x => Model.Confirmation, Model.ConfirmationTitle)

        @Html.BootstrapEditor("Confirmation", Model.ConfirmationTitle)

        if (Model.ShowInformation)
        {
            @Html.HelpBlock(Model.ConfirmationHelp)
        }

        @Html.BootstrapValidationMessageFor(x => Model.Confirmation)
    }

    else
    {
        var hasStyleSettings = Model as IStyleSettings;
        @Html.BootstrapLabelFor(x => Model.Value, Model.PasswordTitle, hasStyleSettings != null ? hasStyleSettings.LeftColumnStyle : string.Empty)

        <div class="@(hasStyleSettings != null ? hasStyleSettings.RightColumnStyle : string.Empty)">
            @Html.BootstrapEditor("Value", Model.PasswordTitle)
            @if (Model.ShowInformation)
            {
                @Html.HelpBlock(Model.PasswordHelp)
            }
            @Html.BootstrapValidationMessageFor(x => Model.Value)
        </div>

        @Html.BootstrapLabelFor(x => Model.Value, Model.ConfirmationTitle, hasStyleSettings != null ? hasStyleSettings.LeftColumnStyle : string.Empty)
        <div class="@(hasStyleSettings != null ? hasStyleSettings.RightColumnStyle : string.Empty)">
            @Html.BootstrapEditor("Confirmation", Model.ConfirmationTitle)
            @if (Model.ShowInformation)
            {
                @Html.HelpBlock(Model.ConfirmationHelp)
            }
            @Html.BootstrapValidationMessageFor(x => Model.Confirmation)
        </div>
    }
}
