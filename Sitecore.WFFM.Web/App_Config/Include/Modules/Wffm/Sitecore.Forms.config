<?xml version="1.0" encoding="utf-8"?>
<!-- 
Purpose: This include file configures Web Forms for Marketers. The file is mandatory for Web Forms for Marketers to function correctly. -->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:x="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/">
    <sitecore role:require="Standalone or ContentDelivery or ContentManagement">
        <!--HOOKS-->
        <hooks>
            <!--remote events hook-->
            <hook type="Sitecore.Form.Core.WffmActionHook, Sitecore.Forms.Core"/>
        </hooks>
        <!-- SETTINGS -->
        <settings>
            <!-- AUDIT ALLOWED TYPES
           Field types that can keep audit data
      -->
            <setting name="WFM.AuditAllowedTypes" value="|Rich Text|html|text|Multi-Line Text|Single-Line Text|memo|" />

            <!-- LISTFIELD ITEMS DELIMITER
           The delimiter character for items of the list field types.
           It affects how the items will be separated when there are saving to Db
           If this parameter is disabled (commented) the items will be wrapped in xml nodes
      -->
            <!--<setting name="WFM.ListFieldItemsDelimiterCharacter" value="," />-->

            <!-- BIND FORM COUNT
           Bind form count in Form Reports
      -->
            <setting name="WFM.BindFormCount" value="true" />

            <!-- COMMAND TIMEOUT
      -->
            <setting name="WFM.CommandTimeout" value="180" />

            <!-- CONNECTION STRING
           Sets the name of the connection string
      -->
            <setting name="WFM.ConnectionString" value="wfm" />

            <!-- CORE DATABASE
           Sets the name of the core database
      -->
            <setting name="WFM.CoreDatabase" value="core" />

            <!-- SHARED DATABASE
           Sets the name of a database that is shared between CM and CD instances
      -->
            <setting name="WFM.SharedDatabase" value="core" />

            <!-- DEFAULT DATE FORMAT
           Sets default date format -->
            <setting name="WFM.DefaultDateFormat" value="D" />

            <!-- MASTER DATABASE 
           Sets the name of the master database
      -->
            <setting name="WFM.MasterDatabase" value="master" />

            <setting name="WFM.MasterDatabase" role:require="ContentDelivery">
                <patch:attribute name="value">web</patch:attribute>
            </setting>

            <!-- OPEN FORM DESIGNER AS MODAL DIALOG
           Sets whether the form designer is opened as a modal dialog
      -->
            <setting name="WFM.OpenFormDesignerAsModalDialog" value="false" />

            <!-- RELEVANT SCALE
      -->
            <setting name="WFM.RelevantScale" value="0.8" />

            <!-- Remote Service
           Sets the name of the remote server connection string
      -->
            <setting name="WFM.RemoteService" value="remoteWfmService" />

            <!-- SERVER TRESHOLD
           Server threshold parameters -->
            <setting name="WFM.ServerThreshold" value="2/1-100/60" />

            <!-- SESSION THRESHOLD
           Session threshold parameters -->
            <setting name="WFM.SessionThreshold" value="2/1-100/60" />

            <!-- INITIAL VALUES CACHE SIZE
           Sets max size of initial values cache  -->
            <setting name="WFM.InitialValuesCacheSize" value="100KB" />

            <!-- HIDE INNER EXCEPTION
           Sets whether the inner exception is hidden or not -->
            <setting name="Exception.HideInner" value="true" />

            <!-- SAVE ACTION PIPELINE
           Sets whether the execution of the rest save actions on a form should be aborted if the previous save action fails  -->
            <setting name="WFM.SaveActionPipeline.AbortIfActionFails" value="false" />

            <!-- SAVE ACTION PIPELINE
          Sets the message which will be displayed if the Save Action pipeline aborts execution  -->
            <setting name="WFM.SaveActionPipeline.ErrorMessage" value="" />
        </settings>

        <!-- EVENTS -->
        <events timingLevel="custom">
            <event name="forms:save"></event>
            <!--Remote events handler-->
            <event name="wffm:action:remote">
                <handler type="Sitecore.Form.Core.WffmActionHandler, Sitecore.Forms.Core" method="OnWffmActionEventFired" >
                    <param name="actionManager" ref="/sitecore/wffm/wffmActionExecutor" />
                    <param name="settings" ref="/sitecore/wffm/settings" />
                </handler>
            </event>
            <event name="publish:end">
                <handler type="Sitecore.Form.Core.PublishItemExtension, Sitecore.Forms.Core" method="PublishFormChildItems" >
                </handler>
            </event>
        </events>

        <!-- FIELD TYPES -->
        <fieldTypes>
            <fieldType name="GroupList" type="Sitecore.Form.Core.Fields.GroupListField,Sitecore.Forms.Core" />
        </fieldTypes>

        <!-- PIPELINES -->
        <pipelines>
            <sessionEnd>
                <processor type="Sitecore.Form.Core.Pipeline.SessionEnd.RegisterFormDropouts, Sitecore.Forms.Core" x:before="processor[@type='Sitecore.Analytics.Pipelines.SessionEnd.RaiseVisitEnd,Sitecore.Analytics']" />
            </sessionEnd>
            <preRenderForm></preRenderForm>
            <formUploadFile>
                <processor type="Sitecore.Form.Core.Pipelines.FormUploadFile.ResolveFolder, Sitecore.Forms.Core" />
                <processor type="Sitecore.Form.Core.Pipelines.FormUploadFile.Save, Sitecore.Forms.Core" />
            </formUploadFile>
            <successAction>
                <processor type="Sitecore.Form.Core.Pipelines.FormSubmit.SuccessRedirect, Sitecore.Forms.Core" />
                <processor type="Sitecore.Form.Core.Pipelines.FormSubmit.FormatSuccessMessage, Sitecore.Forms.Core" />
            </successAction>
            <errorSubmit>
                <processor type="Sitecore.Form.Core.Pipelines.FormSubmit.FormatMessage, Sitecore.Forms.Core" />
            </errorSubmit>
            <errorSave>
                <processor type="Sitecore.Form.Core.Pipelines.FormSubmit.ClearBrokenMedia, Sitecore.Forms.Core" />
            </errorSave>
            <getQueryState>
                <processor type="Sitecore.Form.Core.Pipeline.GetQueryState.HideAnalytics, Sitecore.Forms.Core" />
            </getQueryState>
            <renderLayout>
                <processor type="Sitecore.Form.Core.Pipeline.RenderLayout.ViewPlaceholdersHandler, Sitecore.Forms.Core" x:after="processor[@type='Sitecore.Pipelines.RenderLayout.BuildTree, Sitecore.Kernel']" />
                <processor type="Sitecore.Form.Core.Pipeline.RenderLayout.FormRedirectingHandler, Sitecore.Forms.Core" x:after="processor[@type='Sitecore.Pipelines.RenderLayout.BuildTree, Sitecore.Kernel']" />
            </renderLayout>
            <errorCheck></errorCheck>
            <auditRender>
                <processor type="Sitecore.Form.Core.Pipelines.AuditRender.AuditTimeStamp, Sitecore.Forms.Core" />
                <processor type="Sitecore.Form.Core.Pipelines.AuditRender.AuditUpdatedTitle, Sitecore.Forms.Core" />
                <processor type="Sitecore.Form.Core.Pipelines.AuditRender.AuditUpdatedEntities, Sitecore.Forms.Core" />
                <processor type="Sitecore.Form.Core.Pipelines.AuditRender.AuditSkippedTitle, Sitecore.Forms.Core" />
                <processor type="Sitecore.Form.Core.Pipelines.AuditRender.AuditSkippedEntities, Sitecore.Forms.Core" />
                <processor type="Sitecore.Form.Core.Pipelines.AuditRender.AuditMesssages, Sitecore.Forms.Core" />
            </auditRender>
            <parseAscx>
                <processor type="Sitecore.Form.Core.Pipelines.ParseAscx.ExpandLiteralControl, Sitecore.Forms.Core" />
                <processor type="Sitecore.Form.Core.Pipelines.ParseAscx.ClearDoubleNewLine, Sitecore.Forms.Core" />
                <processor type="Sitecore.Form.Core.Pipelines.ParseAscx.ClearXmlns, Sitecore.Forms.Core" />
            </parseAscx>
            <setCustomCrmProperty>
            </setCustomCrmProperty>
            <setSystemCrmProperty>
                <processor type="Sitecore.Form.Core.Pipelines.Crm.SetStateAndStatusProperty, Sitecore.Forms.Core"/>
            </setSystemCrmProperty>
            <processMessage>
                <processor type="Sitecore.Forms.Core.Pipelines.ProcessMessage, Sitecore.Forms.Core" method="ExpandLinks" />
                <processor type="Sitecore.Forms.Core.Pipelines.ProcessMessage, Sitecore.Forms.Core" method="ExpandTokens">
                    <ItemRepository ref="/sitecore/wffm/itemRepository" />
                    <FieldProvider ref="/sitecore/wffm/fieldProvider" />
                </processor>
                <processor type="Sitecore.Forms.Core.Pipelines.ProcessMessage, Sitecore.Forms.Core" method="AddHostToItemLink" />
                <processor type="Sitecore.Forms.Core.Pipelines.ProcessMessage, Sitecore.Forms.Core" method="AddHostToMediaItem" />
                <processor type="Sitecore.Forms.Core.Pipelines.ProcessMessage, Sitecore.Forms.Core" method="AddAttachments">
                    <ItemRepository ref="/sitecore/wffm/itemRepository" />
                </processor>
                <processor type="Sitecore.Forms.Core.Pipelines.ProcessMessage, Sitecore.Forms.Core" method="BuildToFromRecipient" />
                <processor type="Sitecore.Forms.Core.Pipelines.ProcessMessage, Sitecore.Forms.Core" method="SendEmail" />
            </processMessage>
            <getRenderingPreview>
                <processor type="Sitecore.Form.Core.Pipelines.GetRenderingPreview.SaveUniqIdToSession,Sitecore.Forms.Core" x:before="processor[@type='Sitecore.Pipelines.GetRenderingPreview.TryRenderControl,Sitecore.Kernel']" />
            </getRenderingPreview>
            <getRenderingDatasource>
                <processor type="Sitecore.Form.Core.Pipeline.InsertRenderings.Processors.GetDialogUrl, Sitecore.Forms.Core" x:before="processor[@type='Sitecore.Pipelines.GetRenderingDatasource.CheckDialogState, Sitecore.Kernel']" />
            </getRenderingDatasource>
            <getPlaceholderRenderings>
                <processor type="Sitecore.Form.Core.Pipeline.InsertRenderings.Processors.GetPlaceholder, Sitecore.Forms.Core" />
            </getPlaceholderRenderings>
        </pipelines>

        <!-- CONTROL SOURCES -->
        <controlSources>
            <source mode="on" namespace="Sitecore.Forms.Core.Applications.ContentEditor" assembly="Sitecore.Forms.Core" prefix="forms" />
            <source mode="on" namespace="Sitecore.Forms.Shell.UI.Controls" assembly="Sitecore.Forms.Core" />
        </controlSources>

        <!-- COMMANDS -->
        <commands>
            <command name="forms:edit" type="Sitecore.Forms.Core.Commands.EditForm,Sitecore.Forms.Core" />
            <command name="forms:create" type="Sitecore.Forms.Core.Commands.CreateForm,Sitecore.Forms.Core" />
            <command name="forms:insert" type="Sitecore.Forms.Core.Commands.InsertForm,Sitecore.Forms.Core" />
            <command name="forms:designer" type="Sitecore.Forms.Core.Commands.OpenFormDesigner,Sitecore.Forms.Core" />
            <command name="forms:open" type="Sitecore.Forms.Core.Commands.RedirectToEditForm,Sitecore.Forms.Core" />
            <command name="forms:setsubmitactions" type="Sitecore.Forms.Core.Commands.SetSubmitActions,Sitecore.Forms.Core" />
            <command name="forms:editrule" type="Sitecore.Forms.Core.Commands.EditRule,Sitecore.Forms.Core" />
            <command name="forms:selectform" type="Sitecore.Forms.Core.Commands.OpenForm,Sitecore.Forms.Core" />
            <command name="forms:exporttoascx" type="Sitecore.Form.Core.FormDesigner.ExportToAscx,Sitecore.Forms.Core" />
            <command name="forms:openrobotdetection" type="Sitecore.Form.Core.FormDesigner.OpenRobotDetection,Sitecore.Forms.Core" />
            <command name="forms:selectplaceholders" type="Sitecore.Forms.Core.Commands.RestrinctingPlaceholders,Sitecore.Forms.Core" />
            <command name="forms:selectdate" type="Sitecore.Forms.Core.Commands.SelectDate,Sitecore.Forms.Core" />
            <command name="forms:convertdate" type="Sitecore.Forms.Core.Commands.ConvertDate,Sitecore.Forms.Core" />
            <command name="forms:selectitemsbysource" type="Sitecore.Forms.Core.Commands.SelectItemsBySource,Sitecore.Forms.Core" />
            <command name="forms:selectdirectory" type="Sitecore.Forms.Core.Commands.SelectDirectory,Sitecore.Forms.Core" />
            <command name="forms:analytics" type="Sitecore.Forms.Core.Commands.OpenAnalytics,Sitecore.Forms.Core" />
            <command name="forms:configuregoal" type="Sitecore.Forms.Core.Commands.ConfigureGoal,Sitecore.Forms.Core" />
            <command name="forms:openreport" type="Sitecore.Forms.Core.Commands.OpenFormReport,Sitecore.Forms.Core" />
        </commands>

        <!-- QUERY SELECTOR -->
        <queryselector defaultProvider="default">
            <providers>
                <clear />
                <add name="default" type="Sitecore.Forms.Core.Data.DefaultQueryProvider, Sitecore.Forms.Core" />
                <add name="root" type="Sitecore.Forms.Core.Data.RootQueryProvider, Sitecore.Forms.Core" />
                <add name="xpath" type="Sitecore.Forms.Core.Data.XPathQueryProvider, Sitecore.Forms.Core" />
                <add name="sitecore" type="Sitecore.Forms.Core.Data.SitecoreQueryProvider, Sitecore.Forms.Core" />
                <add name="fast" type="Sitecore.Forms.Core.Data.FastQueryProvider, Sitecore.Forms.Core" />
            </providers>
        </queryselector>

        <!-- SITES -->
        <sites>
            <site name="website">
                <x:attribute name="formsRoot">{F1F7AAB6-C8CE-422F-A214-F610C109FA63}</x:attribute>
            </site>
        </sites>

        <!-- UI -->
        <ui>
            <references>
                <reference id="Sitecore.Forms.Core.dll">/bin/Sitecore.Forms.Core.dll</reference>
            </references>
        </ui>
    </sitecore>
</configuration>