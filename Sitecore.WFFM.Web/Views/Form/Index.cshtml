@using Sitecore.Form.Core.Configuration
@using Sitecore.Forms.Mvc
@using Sitecore.Forms.Mvc.Html
@model Sitecore.Forms.Mvc.ViewModels.FormViewModel

@{
    ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix = Model.ClientId;

    var styles = new List<string> { "content/themes/base/all.css", "content/Fields.css" };
    if (Sitecore.Forms.Mvc.Settings.EnableBootstrapCssRendering)
    {
      styles.Add("content/bootstrap.min.css");
    }
    styles.Add("content/Fields.css");
    var scripts = new List<string>
  {
    "libs/jquery/jquery-3.2.1.min.js",
    "libs/jquery/jquery-ui-1.12.0.min.js",
    "libs/jquery/jquery.validate.min.js",
    "libs/jquery/jquery.validate.unobtrusive.min.js",
    "libs/bootstrap/bootstrap.min.js",
    "wffm.min.js",
    "main.min.js"
  };
}

@Html.RenderStyles(styles.Select(s => Constants.ScriptsBaseUrl + s).ToArray())
@Html.RenderStyles(string.Format(StaticSettings.CustomCssPath, string.Empty))
@Html.EditorFor(x => Model)

@if (!Model.SuccessSubmit && !Model.Errors.Any())
{
    @Html.RenderScripts(scripts.Select(s => Constants.ScriptsBaseUrl + s).ToArray())
}

